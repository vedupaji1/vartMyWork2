{"version":3,"sources":["Components/Navbar.jsx","Components/GetTodoDetails.jsx","Components/TodoComponent.jsx","Components/Error404.jsx","Components/User.jsx","Components/Service.jsx","Components/EmailVerification.jsx","Components/MainTemp.jsx","Components/PageFooter.jsx","Components/Header.jsx","Components/OfflineErrorPage.jsx","App.js","swDev.js","index.js"],"names":["changeStyleOnOver","index","document","getElementsByTagName","style","changeStyleOnOut","pp","Navbar","dataForLink","useContext","IsNavActive","className","to","isActive","onMouseOver","onMouseOut","marginRight","sleepOp","sleepTime","Promise","res","rej","setTimeout","GetTodoDetails","props","useState","valid","formComplete","message","formStatus","setFormStatus","dataLink","saveDataInSession","todoData","sessionData","JSON","parse","localStorage","getItem","length","id","setItem","stringify","push","addNewTodoFunction","getInputData","e","a","changeNavFunc","todoDataFromUser","taskName","getElementsByClassName","value","trim","taskDetails","getElementById","taskTime","taskCompleted","taskExpired","newStateObjData","curTime","Date","getTime","height","backgroundColor","color","type","placeholder","onChange","realHeight","scrollHeight","name","onClick","target","TodoComponent","arr","Array","fill","TodoTime","setTodoTime","showTodoTaskTime","data","tempArr","slice","actualTime","timeObj","getDate","getMonth","getFullYear","getHours","getMinutes","width","clientWidth","checkIsExpired","setInterval","i","taskExpiredFunc","clearInterval","map","tempTodoData","taskCompleteFunc","visibility","taskDeleteFunc","tempTodoTime","opacity","marginTop","splice","deleteTask","display","changeIconStyle","Error404","User","userDataCalc","userData","reqDetail","resDetail","userMisc","email","userName","fontSize","fetch","method","headers","Accept","credentials","then","response","json","console","log","window","location","reload","Service","history","useHistory","changeStyle","transform","marginLeft","inpElem","checked","postInfo","body","isSimple","isNull","resData","dataReceived","replace","getServiceData","boxShadow","EmailVerification","isOtp","setIsOtp","userSendedData","setUserSendedData","useEffect","userDetail","indexOf","otp","status","checkOTP","socket","openSocket","MainTemp","realTodoData","setRealTodoData","userMiscData","setUserMiscData","showNotification","messData","Notification","permission","navigator","serviceWorker","getRegistration","reg","options","icon","vibrate","dateOfArrival","now","primaryKey","title","requestPermission","tempMiscData","error","clear","messTempData","email_op_10","subjectText","otp_op_10","emit","addNewTodo","newTodoDataFromLocalStorage","addTaskCompletedData","newData","tempDataHolder","exact","path","render","component","PageFooter","link","newClass","href","fontFamily","marginBottom","Header","headerName","clientHeight","errorTextStyle","padding","borderRadius","OfflineErrorPage","src","sessionStorage","alt","createContext","App","navActive","setNavActive","headerDetails","request","XMLHttpRequest","open","responseType","onload","reader","FileReader","readAsDataURL","result","send","onLine","slogan","isSlogan","Provider","swDev","swUrl","process","register","ReactDOM"],"mappings":"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","file":"static/js/main.79f34c6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom'; //Importing React Router For Routing\r\nimport { useContext } from \"react\";\r\nimport { IsNavActive } from '../App';\r\n\r\n\r\nconst changeStyleOnOver = (index) => {\r\n    let pp = `font-size: 2.06rem;margin-right: 0;\r\n    background-color: #20232a;\r\n    color: #61dafb;`;\r\n    document.getElementsByTagName(\"li\")[index].style = pp;\r\n}\r\nconst changeStyleOnOut = (index) => {\r\n    let pp;\r\n    if (index === 1) {\r\n        pp = `font-size: 1.8rem;\r\n        margin-right: 1.1rem;\r\n        background-color: white;\r\n        color: black;`;\r\n    }\r\n    else {\r\n        pp = `font-size: 1.8rem;\r\n        margin-right: 1rem;\r\n        background-color: white;\r\n        color: black;`;\r\n    }\r\n    document.getElementsByTagName(\"li\")[index].style = pp;\r\n}\r\nconst Navbar = () => {\r\n    const dataForLink = useContext(IsNavActive)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbarHead\">\r\n                <div className=\"navbarHeadChild\">\r\n                    <div className=\"navbarlists\">\r\n                        <ul>\r\n                            <Link to={dataForLink.isActive === true ? \"/\" : \"/addWork\"} ><li onMouseOver={() => changeStyleOnOver(0)} onMouseOut={() => changeStyleOnOut(0)} >My Work</li></Link>\r\n                            <Link to=\"/addWork\"><li style={{ marginRight: '1.1rem' }} onMouseOver={() => changeStyleOnOver(1)} onMouseOut={() => changeStyleOnOut(1)} >Add Work</li></Link>\r\n                            <Link to=\"/user\"><li onMouseOver={() => changeStyleOnOver(2)} onMouseOut={() => changeStyleOnOut(2)}>User</li></Link>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar;\r\nexport { changeStyleOnOver, changeStyleOnOut }\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { IsNavActive } from '../App';\r\n\r\nconst sleepOp = (sleepTime) => {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            res();\r\n        }, sleepTime);\r\n    })\r\n}\r\n\r\nconst GetTodoDetails = (props) => {\r\n    const [formStatus, setFormStatus] = useState({ valid: true, formComplete: false, message: \"Form Is Empty\" })\r\n    const dataLink = useContext(IsNavActive) //Received  Data From App.js Using 'useContext'\r\n\r\n    const saveDataInSession = (todoData) => {\r\n        let sessionData = JSON.parse(localStorage.getItem('VARtMyWorkData'));\r\n        if (sessionData === null || sessionData.length === 0) {\r\n            todoData.id = 1;\r\n            localStorage.setItem('VARtMyWorkData', JSON.stringify([todoData]))\r\n        }\r\n        else {\r\n            todoData.id = sessionData[sessionData.length - 1].id + 1;\r\n            sessionData.push(todoData);\r\n            localStorage.setItem('VARtMyWorkData', JSON.stringify(sessionData))\r\n        }\r\n        sessionData = JSON.parse(localStorage.getItem('VARtMyWorkData'));\r\n        props.addNewTodoFunction();//'addNewTodoFunction' Is Not Actually Function, This Is Name Of Props Actual Function Name Is 'addNewTodo'\r\n    }\r\n\r\n    const getInputData = async (e) => {\r\n        dataLink.changeNavFunc(false); //Calling Function, Which Is In App.js\r\n\r\n        let todoDataFromUser = {\r\n            taskName: document.getElementsByClassName(\"taskNameInput\")[0].value.trim(),\r\n            taskDetails: document.getElementById(\"taskDesc\").value,\r\n            taskTime: document.getElementById(\"taskTime\").value,\r\n            taskCompleted: false,\r\n            taskExpired: false\r\n        };\r\n\r\n        if (todoDataFromUser.taskName === \"\" || todoDataFromUser.taskDetails === \"\" || todoDataFromUser.taskTime === \"\") {\r\n            let newStateObjData = {\r\n                valid: false,\r\n                formComplete: formStatus.formComplete,\r\n                message: formStatus.message\r\n            }\r\n            setFormStatus(newStateObjData)\r\n        }\r\n        else {\r\n            let curTime = new Date();\r\n            let taskTime = new Date(todoDataFromUser.taskTime);\r\n            if (curTime.getTime() >= taskTime.getTime()) {\r\n                let newStateObjData = {\r\n                    valid: false,\r\n                    formComplete: formStatus.formComplete,\r\n                    message: \"Invalid Date\"\r\n                }\r\n                setFormStatus(newStateObjData);\r\n            }\r\n            else if (todoDataFromUser.taskName.length > 32) {\r\n                let newStateObjData = {\r\n                    valid: false,\r\n                    formComplete: formStatus.formComplete,\r\n                    message: \"Maximum Length Of Task Name Is 32\"\r\n                }\r\n                setFormStatus(newStateObjData);\r\n            }\r\n            else {\r\n\r\n                let newStateObjData = {\r\n                    valid: true,\r\n                    formComplete: true,\r\n                    message: \"Todo Created\"\r\n                }\r\n                setFormStatus(newStateObjData);\r\n                await sleepOp(2000);\r\n\r\n                document.getElementsByClassName(\"taskNameInput\")[0].value = \"\";\r\n                document.getElementById(\"taskDesc\").value = \"\";\r\n                document.getElementById(\"taskTime\").value = \"\";\r\n                document.getElementById(\"taskDesc\").style.height = \"3rem\";\r\n                newStateObjData = { valid: true, formComplete: false, message: \"Form Is Empty\" }\r\n                setFormStatus(newStateObjData)\r\n                let taskTime = new Date(todoDataFromUser.taskTime);\r\n                todoDataFromUser.taskTime = taskTime.getTime();\r\n                saveDataInSession(todoDataFromUser);\r\n                dataLink.changeNavFunc(true); //Recalling Function \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"getDetailsMainDiv\">\r\n                <div className=\"getDetailsMainChid\"><div className=\"createTodo\">\r\n                    <div className=\"getDetailsText\"> <span>Create Todo</span></div>\r\n                </div>\r\n                    {\r\n                        formStatus.valid === false ? <div className=\"warningDiv\"> {formStatus.message}</div> :\r\n                            formStatus.formComplete === true ? <div style={{ backgroundColor: '#c3ffc3', color: '#3c3c3c' }} className=\"warningDiv\"> {formStatus.message}</div> : <></>\r\n                    }\r\n\r\n                    <div className=\"getDetailsMainDivChild\">\r\n                        <input type=\"text\" className=\"taskNameInput\" placeholder=\"Task Name\" /><br />\r\n                        <textarea\r\n                            onChange={() => {\r\n                                document.getElementById(\"taskDesc\").style.height = 'auto'\r\n                                let realHeight = document.getElementById(\"taskDesc\").scrollHeight;\r\n                                document.getElementById(\"taskDesc\").style.height = realHeight - 12 + 'px';\r\n                            }}\r\n                            name=\"taskDesc\" id=\"taskDesc\" placeholder=\"Task Description\"></textarea>\r\n                        <input type=\"datetime-local\" name=\"taskTime\" id=\"taskTime\" />\r\n                        <button\r\n                            onMouseOver={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1955a4\"; }}\r\n                            onMouseOut={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1b61bf\"; }}\r\n                            onClick={(e) => getInputData(e.target.value, true)} className=\"dataSubmit\">Create Todo</button>\r\n                    </div></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GetTodoDetails;\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst TodoComponent = (props) => {\r\n    let arr = new Array(props.todoData.length).fill(null)\r\n    const [TodoTime, setTodoTime] = useState(arr)\r\n\r\n    const showTodoTaskTime = (data) => {\r\n        let tempArr = TodoTime.slice();\r\n        if (tempArr[data] == null) {\r\n            let timeObj = new Date(props.todoData[data].taskTime);\r\n            let curTime = new Date();\r\n            let actualTime;\r\n\r\n            if (curTime.getDate() === timeObj.getDate() && curTime.getMonth() === timeObj.getMonth() && curTime.getFullYear() === timeObj.getFullYear()) {\r\n                actualTime = timeObj.getHours() + \":\" + timeObj.getMinutes()\r\n            }\r\n            else {\r\n                actualTime = timeObj.getHours() + \":\" + timeObj.getMinutes() + \"     \" + timeObj.getDate() + \"/\" + timeObj.getMonth() + \"/\" + timeObj.getFullYear();\r\n                document.getElementsByClassName(\"showTodoTime\")[data].style.width = \"15rem\";\r\n            }\r\n            tempArr[data] = actualTime;\r\n        }\r\n        else {\r\n            tempArr[data] = null;\r\n            if (document.getElementsByClassName(\"showTodoTime\")[data].clientWidth === 150) {\r\n                document.getElementsByClassName(\"showTodoTime\")[data].style.width = \"10rem\";\r\n            }\r\n        }\r\n        setTodoTime(tempArr);\r\n    }\r\n\r\n    const changeIconStyle = (i) => {\r\n        if (document.getElementsByClassName(\"transIcon\")[i].style.marginTop === \"-1rem\") {\r\n            document.getElementsByClassName(\"transIcon\")[i].style.marginTop = \"-2rem\"\r\n            document.getElementsByClassName(\"todoModifier\")[i].style.opacity = \"0\"\r\n            document.getElementsByClassName(\"todoModifier\")[i].style.visibility = \"hidden\"\r\n        }\r\n        else {\r\n            document.getElementsByClassName(\"transIcon\")[i].style.marginTop = \"-1rem\"\r\n            document.getElementsByClassName(\"todoModifier\")[i].style.visibility = \"visible\"\r\n            document.getElementsByClassName(\"todoModifier\")[i].style.opacity = \"1\"\r\n        }\r\n    }\r\n\r\n    const deleteTask = (i) => {\r\n        props.taskDeleteFunc(i)\r\n        let tempTodoTime = TodoTime;\r\n        document.getElementsByClassName(\"todoModifier\")[i].style.opacity = \"0\"\r\n        document.getElementsByClassName(\"todoModifier\")[i].style.visibility = \"hidden\"\r\n        document.getElementsByClassName(\"transIcon\")[i].style.marginTop = \"-2rem\"\r\n        tempTodoTime.splice(i, 1);\r\n        setTodoTime(tempTodoTime);\r\n    }\r\n\r\n\r\n\r\n    const checkIsExpired = setInterval(() => {\r\n        for (let i = 0; i < props.todoData.length; i++) {\r\n            let taskTime = new Date(props.todoData[i].taskTime);\r\n            let curTime = new Date();\r\n\r\n            if ((props.todoData[i].taskCompleted === false) && (props.todoData[i].taskExpired === false)) {\r\n                if (taskTime.getTime() < curTime.getTime()) {\r\n                    props.taskExpiredFunc(i);\r\n                    clearInterval(checkIsExpired);\r\n                }\r\n            }\r\n        }\r\n    }, 60000)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.todoData.map((tempTodoData, i) => (\r\n                    <div key={i} className=\"bodyDivChild\">\r\n                        <div className=\"todoModifier\">\r\n                            <div onClick={() => props.taskCompleteFunc(i)} style={tempTodoData.taskCompleted === false ? {} : { visibility: \"hidden\" }} className=\"todoDone todoModifierButtons\"><span>Complete</span></div>\r\n                            <div onClick={() => deleteTask(i)} className=\"todoDelete todoModifierButtons\"><span>Delete</span></div>\r\n                        </div>\r\n                        <div className=\"todoTaskBar\">\r\n                            <div className=\"todoTitleDiv\">\r\n                                <span >{tempTodoData.taskName}</span>\r\n                            </div>\r\n                            <div className=\"taskCompletedSign\">\r\n                                <i style={tempTodoData.taskCompleted === true ? { display: \"block\", color: '#04AA6D' } : { display: \"none\", color: '#04AA6D' }} className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                <i style={tempTodoData.taskExpired === true ? { display: \"block\", color: \"red\" } : { display: \"none\", color: \"red\" }} className=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                            <div onMouseOver={() => showTodoTaskTime(i)} onMouseOut={() => showTodoTaskTime(i)} className=\"showTodoTime\">\r\n                                <span >{TodoTime[i] == null ? \"Time\" : TodoTime[i]}</span>\r\n                            </div>\r\n                            <div className=\"iconHead\">\r\n                                <div onClick={() => changeIconStyle(i)} className=\"iconChild\">\r\n                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                                    <i className=\"fa fa-angle-down transIcon\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"todoTaskDescription\"><span>{tempTodoData.taskDetails}</span></div>\r\n\r\n                    </div>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TodoComponent;","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"div1\">\r\n                <div className=\"div2\">\r\n                    <div className=\"op40 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                    <div className=\"op41 err1\">\r\n                        <h1>0</h1>\r\n                    </div>\r\n                    <div className=\"op42 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"message1\">\r\n                    <h1>Something Went Wrong</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React from \"react\";\r\nimport '../App.css'\r\n\r\nconst User = (props) => {\r\n\r\n    const userDataCalc = (type) => {\r\n        let data = 0;\r\n        for (let i = 0; i < (props.todoData !== null ? props.todoData.length : 0); i++) {\r\n            if (props.todoData[i][type] === true) {\r\n                data++;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    const logoutFromTodo = () => {\r\n        fetch('/userLog', {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                window.location.reload();\r\n            });\r\n    }\r\n\r\n    let userData = [\r\n        { reqDetail: \"Total Tasks\", resDetail: props.todoData !== null ? props.todoData.length : 0 },\r\n        { reqDetail: \"Task Completed\", resDetail: userDataCalc(\"taskCompleted\") },\r\n        { reqDetail: \"Task Incomplete\", resDetail: 0 },\r\n        { reqDetail: \"Task Expired\", resDetail: userDataCalc(\"taskExpired\") }\r\n    ]\r\n    userData[2].resDetail = userData[0].resDetail - userData[1].resDetail;\r\n    return (\r\n        <>\r\n            <div className=\"getDetailsMainDiv\">\r\n                <div className=\"getDetailsMainChid\"><div className=\"createTodo\">\r\n                    <div style={props.userMisc.email === null ? {} : { marginTop: '5.5rem' }} className=\"getDetailsText\">\r\n                        <div className=\"userNameText\">\r\n                            {\r\n                                props.userMisc.userName === null ? \"Todo Details\" : props.userMisc.userName\r\n                            }\r\n                        </div>\r\n                        <div style={{ fontSize: '1.2rem', color: 'white', display: props.userMisc.email === null ? 'none' : 'block' }} className=\"emailText\">\r\n                            {props.userMisc.email}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div className=\"getDetailsMainDivChild\">\r\n                        {\r\n                            userData.map((data, i) =>\r\n                            (\r\n                                <div id={\"resDetails\" + i} onMouseOver={() => document.getElementById(\"resDetails\" + i).style.height = \"7rem\"} onMouseOut={() => document.getElementById(\"resDetails\" + i).style.height = \"4rem\"} key={i} className=\"detailListHead\">\r\n                                    <div className=\"detailChild\" >{data.reqDetail}</div>\r\n                                    <div className=\"detailAns\">{data.resDetail}</div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <button\r\n                            onMouseOver={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"rgb(193 2 2)\"; }}\r\n                            onMouseOut={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"rgb(237 18 18)\"; }}\r\n                            onClick={() => logoutFromTodo()} className=\"dataSubmit logoutBut\">Log Out</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default User;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Service = (props) => {\r\n\r\n    const [formStatus, setFormStatus] = useState({ valid: true, message: \"Form Is Empty\" })\r\n    const history = useHistory();\r\n\r\n    const changeStyle = (i) => {\r\n        if (document.getElementsByClassName(\"serveInfoChild\")[i].clientWidth === 140) {\r\n            document.getElementsByClassName(\"trans\")[i].style.transform = \"rotate(0deg)\"\r\n            document.getElementsByClassName(\"serveInfoChild\")[i].style.width = \"0rem\";\r\n        }\r\n        else {\r\n            document.getElementsByClassName(\"trans\")[i].style.transform = \"rotate(90deg)\"\r\n            document.getElementsByClassName(\"serveInfoChild\")[i].style.width = \"13rem\";\r\n        }\r\n    }\r\n\r\n    const getServiceData = () => {\r\n        let inpElem = document.getElementsByClassName(\"dataTaker\");\r\n        let data;\r\n        if (inpElem[0].checked === false && inpElem[1].checked === false) {\r\n            setFormStatus({ valid: false, message: \"Form Is Empty\" })\r\n        }\r\n        else if (inpElem[0].checked === true && inpElem[1].checked === true) {\r\n            setFormStatus({ valid: false, message: \"Invalid Input\" })\r\n        }\r\n        else {\r\n            if (inpElem[0].checked === true) {\r\n                data = true;\r\n                let postInfo = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ isSimple: data, userName: null, email: null, isNull: false })\r\n                }\r\n                fetch('/userRealData', postInfo).then((resData) => { // Sended Post Request, That Data Will Store Express Session\r\n                    props.dataReceived({ isSimple: data, userName: null, email: null, isNull: false });\r\n                })\r\n            }\r\n            else {\r\n                history.replace(\"/emailVerification\")\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"getDetailsMainDiv\">\r\n                <div className=\"getDetailsMainChid\"><div className=\"createTodo\">\r\n                    <div className=\"getDetailsText\"> <span>Services</span></div>\r\n                </div>\r\n                    {\r\n                        formStatus.valid === false ? <div className=\"warningDiv\"> {formStatus.message}</div> : <></>\r\n                    }\r\n                    <div className=\"getDetailsMainDivChild\">\r\n                        <div className=\"inpRadioHead\">\r\n                            <span>Simple </span>\r\n                            <input className=\"dataTaker\" style={{ marginLeft: '5rem' }} type=\"radio\" name=\"serviceInp\" id=\"simpleServe\" />\r\n                            <div className=\"infoOfServe\">\r\n                                <div className=\"serveInfoChild\">No Notification</div>\r\n                                <div className=\"showInfoIcon\">\r\n                                    <i onClick={() => changeStyle(0)} className=\"fa fa-angle-down trans\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inpRadioHead\">\r\n                            <span>Advance </span>\r\n                            <input className=\"dataTaker\" style={{ marginLeft: '4rem' }} type=\"radio\" name=\"serviceInp\" id=\"advServe\" />\r\n                            <div className=\"infoOfServe\">\r\n                                <div className=\"serveInfoChild\">Notification Via Mail</div>\r\n                                <div className=\"showInfoIcon\">\r\n                                    <i onClick={() => changeStyle(1)} className=\"fa fa-angle-down trans\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={() => getServiceData()}\r\n                            style={{ width: \"27rem\", marginTop: \"2rem\", boxShadow: \" 0rem 0rem 0.4rem 0.01rem #b0b0b0\" }}\r\n                            onMouseOver={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1955a4\"; }}\r\n                            onMouseOut={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1b61bf\"; }}\r\n                            className=\"dataSubmit\">Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Service;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EmailVerification = (props) => {\r\n    const history = useHistory();\r\n    const [formStatus, setFormStatus] = useState({ valid: true, formComplete: false, message: \"Form Is Empty\" })\r\n    const [isOtp, setIsOtp] = useState(false)\r\n    const [userSendedData, setUserSendedData] = useState(null);\r\n    useEffect(() => {\r\n        fetch(\"/userRealData\").then(response => response.json())\r\n            .then(data => {\r\n                if (data.isNull === false) {\r\n                    history.replace('/')\r\n                }\r\n            }, []);\r\n    })\r\n\r\n    const getInputData = () => {\r\n        let userDetail = {\r\n            isSimple: false,\r\n            userName: document.getElementsByClassName(\"userName\")[0].value,\r\n            email: document.getElementsByClassName(\"userMail\")[0].value,\r\n            isNull: false\r\n        };\r\n        let newStateObjData = {\r\n            valid: true,\r\n            formComplete: false,\r\n            message: \"Form Is Empty\"\r\n        }\r\n        if (userDetail.userName === \"\" || userDetail.userName === \"\") {\r\n            newStateObjData.valid = false;\r\n            setFormStatus(newStateObjData)\r\n        }\r\n        else {\r\n            if (userDetail.email.length < 11 || (userDetail.email.slice(userDetail.email.length - 10)) !== \"@gmail.com\" || userDetail.email.indexOf(' ') >= 0) {\r\n                newStateObjData.valid = false;\r\n                newStateObjData.message = \"Invalid Gmail Id\"\r\n                setFormStatus(newStateObjData)\r\n            }\r\n            else {\r\n                newStateObjData.valid = true;\r\n                newStateObjData.formComplete = true;\r\n                newStateObjData.message = \"Receiving Your Details\";\r\n                userDetail[\"pp\"] = null;\r\n                setUserSendedData(userDetail)\r\n                setFormStatus(newStateObjData);\r\n                let postInfo = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(userDetail)\r\n                }\r\n                fetch('/getMailData', postInfo).then((resData) => { // Sended Post Request, That Data Will Store Express Session\r\n                    setFormStatus({\r\n                        valid: true,\r\n                        formComplete: false,\r\n                        message: \"Form Is Empty\"\r\n                    })\r\n                    setIsOtp(true);\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkOTP = () => {\r\n        let userDetail = {\r\n            otp: document.getElementsByClassName(\"otpNum\")[0].value,\r\n        };\r\n        let newStateObjData = {\r\n            valid: true,\r\n            formComplete: false,\r\n            message: \"Form Is Empty\"\r\n        }\r\n        if (userDetail.otp === \"\") {\r\n            newStateObjData.valid = false;\r\n            setFormStatus(newStateObjData)\r\n        }\r\n        else {\r\n            if (userDetail.otp.length !== 6) {\r\n                newStateObjData.valid = false;\r\n                newStateObjData.message = \"Invalid OTP\"\r\n                setFormStatus(newStateObjData)\r\n            }\r\n            else {\r\n                let postInfo = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(userDetail)\r\n                }\r\n                fetch('/getValOTP', postInfo).then((resData) => { // Sended Post Request, That Data Will Store Express Session\r\n\r\n                    if (resData.status === 201) {\r\n                        newStateObjData.valid = true;\r\n                        newStateObjData.formComplete = true;\r\n                        newStateObjData.message = \"Valid OTP\";\r\n                        setFormStatus(newStateObjData);\r\n                        props.dataReceived(userSendedData);\r\n                        history.replace('/')\r\n                    }\r\n                    else {\r\n                        newStateObjData.valid = false;\r\n                        newStateObjData.message = \"Invalid OTP\"\r\n                        setFormStatus(newStateObjData)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"getDetailsMainDiv\">\r\n                <div className=\"getDetailsMainChid\">\r\n                    <div className=\"createTodo\">\r\n                        <div className=\"getDetailsText\"> <span>Register</span></div>\r\n                    </div>\r\n                    {\r\n                        formStatus.valid === false ? <div className=\"warningDiv\"> {formStatus.message}</div> :\r\n                            formStatus.formComplete === true ? <div style={{ backgroundColor: '#c3ffc3', color: '#3c3c3c' }} className=\"warningDiv\"> {formStatus.message}</div> : <></>\r\n                    }\r\n\r\n                    <div className=\"getDetailsMainDivChild\">\r\n                        {isOtp === false ?\r\n                            <>\r\n                                <input type=\"text\" name=\"userName\" className=\"userName\" placeholder=\"Username\" />\r\n                                <input type=\"email\" name=\"userMail\" id=\"userMail\" className=\"userMail\" placeholder=\"Gmail ID\" />\r\n                                <button\r\n                                    onMouseOver={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1955a4\"; }}\r\n                                    onMouseOut={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1b61bf\"; }}\r\n                                    onClick={(e) => getInputData()} className=\"dataSubmit\">Submit</button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <input type=\"number\" name=\"otpNum\" className=\"otpNum\" placeholder=\"Enter OTP\" />\r\n                                <button\r\n                                    onMouseOver={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1955a4\"; }}\r\n                                    onMouseOut={() => { document.getElementsByClassName(\"dataSubmit\")[0].style.backgroundColor = \"#1b61bf\"; }}\r\n                                    onClick={(e) => checkOTP()} className=\"dataSubmit\">Submit</button>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nexport default EmailVerification;","import React from 'react';\r\nimport GetTodoDetails from './GetTodoDetails'\r\nimport TodoComponent from './TodoComponent'\r\nimport Error404 from './Error404';\r\nimport User from './User';\r\nimport Service from './Service';\r\nimport EmailVerification from './EmailVerification'\r\nimport { Route } from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport '../App.css'\r\nimport openSocket from 'socket.io-client';\r\nconst socket = openSocket('/');\r\n\r\n\r\nconst MainTemp = () => {\r\n\r\n    const [realTodoData, setRealTodoData] = useState(null)\r\n    const [userMiscData, setUserMiscData] = useState(null)\r\n\r\n    const showNotification = (messData) => {\r\n        if (Notification.permission === 'granted') {\r\n            navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                var options = {\r\n                    body: messData.message,\r\n                    icon: '../logo.png',\r\n                    vibrate: [100, 50, 100],\r\n                    data: {\r\n                        dateOfArrival: Date.now(),\r\n                        primaryKey: 1\r\n                    }\r\n                };\r\n                reg.showNotification(messData.title, options);\r\n            });\r\n        }\r\n        else if (Notification.permission === \"default\") {\r\n            Notification.requestPermission(function (permission) {\r\n                if (permission === \"granted\") {\r\n                    navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                        var options = {\r\n                            body: messData.message,\r\n                            icon: '../logo.png',\r\n                            vibrate: [100, 50, 100],\r\n                            data: {\r\n                                dateOfArrival: Date.now(),\r\n                                primaryKey: 1\r\n                            }\r\n                        };\r\n                        reg.showNotification(messData.title, options);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    try {\r\n        let tempMiscData = JSON.parse(localStorage.getItem(\"VARtMyWorkData\"));\r\n        if (JSON.stringify(tempMiscData) !== JSON.stringify(realTodoData)) {\r\n            setRealTodoData(tempMiscData)\r\n        }\r\n    } catch (error) {\r\n        showNotification({\r\n            title: \"Warning\", message: `    We Have Found Immoral Activity From Your Side.\r\n\r\n        We Have To Delete Your All Task Data And We Have Deleted Your Task Data.`});\r\n        localStorage.clear();\r\n        setRealTodoData(null)\r\n        if (userMiscData.isSimple === false) {\r\n            let messTempData = {\r\n                email_op_10: userMiscData.email,\r\n                subjectText: `Deleted Your Task Data`,\r\n                otp_op_10: `Hi ${userMiscData.userName}, We Have Found Immoral Activity From Your Side.\r\n  We Are Sorry To But Because Of Your Immoral Activity We Have To Delete Your All Task Data And We Have Deleted Your Task Data.\r\n  Please Don't Repeat Such Type Of Mistake In Future.\r\n      \r\n        Thanks`\r\n            }\r\n            socket.emit(\"sendMessage\", messTempData)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userMiscData === null || userMiscData.length === 0) {\r\n            try {\r\n                fetch(\"/userRealData\").then(response => response.json())\r\n                    .then(data => {\r\n                        setUserMiscData(data)\r\n                    });\r\n            } catch (error) {\r\n                console.log(\"Network Problem\")\r\n            }\r\n        }\r\n    })\r\n\r\n    const addNewTodo = () => {\r\n        let newTodoDataFromLocalStorage = JSON.parse(localStorage.getItem(\"VARtMyWorkData\"));\r\n        setRealTodoData(newTodoDataFromLocalStorage);\r\n    }\r\n\r\n    const addTaskCompletedData = (i) => {\r\n        let newData = realTodoData;\r\n        newData[i].taskCompleted = true;\r\n        newData[i].taskExpired = false;\r\n        localStorage.setItem('VARtMyWorkData', JSON.stringify(newData))\r\n        setRealTodoData([...newData]);\r\n\r\n        showNotification({ title: \"Task Completed\", message: `    Hi, Your Task ${realTodoData[i].taskName} Is Completed.` });\r\n        if (userMiscData.isSimple === false) {\r\n            let messTempData = {\r\n                email_op_10: userMiscData.email,\r\n                subjectText: `${realTodoData[i].taskName} Task Completed`,\r\n                otp_op_10: `Hi ${userMiscData.userName}, Your Task ${realTodoData[i].taskName} Is Completed.\r\n\r\n        Task Details:-\r\n   ${realTodoData[i].taskDetails} \r\n\r\n        Thanks`\r\n            }\r\n            socket.emit(\"sendMessage\", messTempData)\r\n        }\r\n    }\r\n    const taskDeleteFunc = (i) => {\r\n        let newData = realTodoData;\r\n        let tempDataHolder;\r\n\r\n        if (userMiscData.isSimple === false) {\r\n            tempDataHolder = realTodoData;\r\n        }\r\n        else {\r\n            tempDataHolder = realTodoData[i].taskName;\r\n        }\r\n        newData.splice(i, 1);\r\n        localStorage.setItem('VARtMyWorkData', JSON.stringify(newData))\r\n        setRealTodoData([...newData]);\r\n\r\n        showNotification({ title: \"Task Deleted\", message: `    Hi, Your Task ${userMiscData.isSimple === false ? tempDataHolder[i].taskName : tempDataHolder} Is Deleted.` });// Simple Notification Function\r\n        if (userMiscData.isSimple === false) {\r\n            let messTempData = {\r\n                email_op_10: userMiscData.email,\r\n                subjectText: `${tempDataHolder[i].taskName} Task Deleted`,\r\n                otp_op_10: `Hi ${userMiscData.userName}, Your Task ${tempDataHolder[i].taskName} Is Deleted.\r\n\r\n        Task Details:-\r\n   ${tempDataHolder[i].taskDetails} \r\n\r\n        Thanks`\r\n            }\r\n            socket.emit(\"sendMessage\", messTempData)\r\n        }\r\n    }\r\n\r\n    const taskExpiredFunc = (i) => {\r\n        let newData = realTodoData;\r\n        newData[i].taskExpired = true;\r\n        localStorage.setItem('VARtMyWorkData', JSON.stringify(newData))\r\n        setRealTodoData([...newData]);\r\n\r\n        showNotification({ title: \"Task Expired\", message: `    Hi, Your Task ${realTodoData[i].taskName} Is Expired.` });// Simple Notification Function\r\n        if (userMiscData.isSimple === false) {\r\n            let messTempData = {\r\n                email_op_10: userMiscData.email,\r\n                subjectText: `${realTodoData[i].taskName} Task Expired`,\r\n                otp_op_10: `Hi ${userMiscData.userName}, Your Task ${realTodoData[i].taskName} Is Expired.\r\n\r\n        Task Details:-\r\n   ${realTodoData[i].taskDetails} \r\n\r\n        Thanks`\r\n            }\r\n            socket.emit(\"sendMessage\", messTempData)\r\n        }\r\n    }\r\n\r\n    const dataReceived = (data) => { // This Function Will Change 'userMiscData' State\r\n        setUserMiscData(data)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainBodyDiv\">\r\n                <div className=\"bodyDiv\">\r\n                    <Switch>\r\n                        <Route exact path='/emailVerification' render={(props) => (\r\n                            <EmailVerification {...props} dataReceived={dataReceived} />\r\n                        )} />\r\n                        {(userMiscData === null) ? <></> :\r\n                            <Switch>\r\n                                <Route exact path=\"/addWork\" render={(props) => (\r\n                                    (userMiscData.isNull === true) ? <Service {...props} dataReceived={dataReceived} /> : <GetTodoDetails {...props} addNewTodoFunction={addNewTodo} />\r\n                                )} />\r\n                                <Route exact path='/user' render={(props) => (\r\n                                    (userMiscData.isNull === true) ? <Service {...props} dataReceived={dataReceived} /> : /*(realTodoData === null || realTodoData.length === 0) ? <GetTodoDetails  {...props} addNewTodoFunction={addNewTodo} /> :*/ <User {...props} userMisc={userMiscData} todoData={realTodoData} />\r\n\r\n                                )} />\r\n                                <Route exact path=\"/\" render={(props) => (\r\n                                    (userMiscData.isNull === true) ? <Service {...props} dataReceived={dataReceived} /> : (realTodoData === null || realTodoData.length === 0) ? <GetTodoDetails  {...props} addNewTodoFunction={addNewTodo} /> : <TodoComponent  {...props} todoData={realTodoData} taskCompleteFunc={addTaskCompletedData} taskDeleteFunc={taskDeleteFunc} taskExpiredFunc={taskExpiredFunc} />\r\n                                )} />\r\n                                <Route component={Error404} />\r\n                            </Switch>\r\n                        }\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainTemp;\r\n","import React from \"react\";\r\n\r\nconst PageFooter = () => {\r\n    let divData = [\r\n        {\r\n            link: \"https://www.youtube.com/channel/UCLYh239Pl56prNR5YGZWxHw\",\r\n            newClass: \"fa fa-2x fa-youtube-play\",\r\n            style: { color: \"#FF0000\", backgroundColor: 'white ' }\r\n        },\r\n        {\r\n            link: \"https://www.facebook.com/panchal.vedant.96\",\r\n            newClass: \"fa fa-2x fa-facebook\",\r\n            style: { backgroundColor: \"#4267B2\" }\r\n        },\r\n        {\r\n            link: \"https://www.instagram.com/vedupaji/\",\r\n            newClass: \"fa fa-2x fa-instagram\",\r\n            style: { backgroundColor: \"#cd486b\" }\r\n        },\r\n        {\r\n            link: \"https://twitter.com/Vedupaji4\",\r\n            newClass: \"fa fa-2x fa-twitter\",\r\n            style: { backgroundColor: \"#1DA1F2\" }\r\n        }]\r\n    return (\r\n        <>\r\n            <footer>\r\n                <div className=\"lococo\">\r\n                    {\r\n                        divData.map((data, index) => (\r\n                            <a key={index} href={data.link}>\r\n                                <div style={data.style} id={\"ffo\" + (index + 1)} className=\"ffo\"><i className={data.newClass}></i></div>\r\n                            </a>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <p style={{ color: ' white', fontSize: '150%', fontFamily: 'Arial, Helvetica, sans-serif', marginBottom: '3rem' }}>By, Vedupaji</p>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageFooter;","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    const changeNavbarHeight = () => { \r\n        if (document.getElementsByClassName(\"navbarHead\")[0].clientHeight === 70) {\r\n            document.getElementsByClassName(\"navbarHead\")[0].style.height = \"19.3rem\";\r\n        }\r\n        else {\r\n            document.getElementsByClassName(\"navbarHead\")[0].style.height = \"7rem\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"headerPart\">\r\n                <div className=\"headerTextDiv\">\r\n                    <div className=\"tempDivForDesign\">\r\n                        <h1 className=\"headerName\"><span className=\"subHeaderName\" style={{ color: 'red', fontSize: '125%' }}>VARt</span>{props.headerName}</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"headerBackground\"></div>\r\n                <div onClick={() => changeNavbarHeight()} className=\"newTempDivForDesign\"><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport { changeStyleOnOver, changeStyleOnOut } from \"./Navbar\";\r\nlet errorTextStyle = {\r\n    backgroundColor: '#ffdbdb',\r\n    color: 'red',\r\n    padding: '0rem 1rem',\r\n    borderRadius: '0.4rem'\r\n}\r\nconst OfflineErrorPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"navbarHead\">\r\n                <div className=\"navbarHeadChild\">\r\n                    <div className=\"navbarlists\">\r\n                        <ul>\r\n                            <li onMouseOver={() => changeStyleOnOver(0)} onMouseOut={() => changeStyleOnOut(0)} >My Work</li>\r\n                            <li style={{ marginRight: '1.1rem' }} onMouseOver={() => changeStyleOnOver(1)} onMouseOut={() => changeStyleOnOut(1)} >Add Work</li>\r\n                            <li onMouseOver={() => changeStyleOnOver(2)} onMouseOut={() => changeStyleOnOut(2)}>User</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mainBodyDiv\">\r\n                <div style={{ marginBottom: '5rem' }} className=\"bodyDiv\">\r\n                    <img className=\"offlineSvg\" src={sessionStorage.getItem('errorImage') === null ? \"./noSignal.svg\" : sessionStorage.getItem('errorImage')} alt=\"Offline\" />\r\n                    <div></div>\r\n                    <div className=\"errorDiv\">\r\n                        <div className=\"errorText\">You Are <span style={errorTextStyle}>Offline</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default OfflineErrorPage;","import React, { createContext } from 'react'; // For Creating Context, Context Is Used For Data Sharing\nimport Navbar from './Components/Navbar.jsx';\nimport MainTemp from './Components/MainTemp';\nimport PageFooter from './Components/PageFooter';\nimport Header from './Components/Header';\nimport OfflineErrorPage from './Components/OfflineErrorPage.jsx';\nimport {useState} from 'react';\n\nlet IsNavActive=createContext();\nfunction App() {\n  let [navActive,setNavActive]=useState(true);\n  let headerDetails = {\n    headerName: \"MyWork\",\n    slogan: \"Cholo Score Dekhe\"\n  }\n\n  const changeNavFunc=(data)=>\n  {\n    setNavActive(data);\n  }\n\n  if (sessionStorage.getItem('errorImage')===null) {\n    var request = new XMLHttpRequest();\n    request.open('GET', 'noSignal.svg', true);\n    request.responseType = 'blob';\n    request.onload = () => {\n    var reader = new FileReader();\n    reader.readAsDataURL(request.response);\n    reader.onload =  function(e){\n        sessionStorage.setItem('errorImage',e.target.result)\n    };\n   };\n  request.send();\n  }\n  \n\n  return (\n    <>{console.log(navigator.onLine)}\n      <Header headerName={headerDetails.headerName} slogan={headerDetails.slogan} isSlogan={false} />\n      {\n       navigator.onLine===true?    \n        <>\n        <IsNavActive.Provider value={{isActive:navActive,changeNavFunc:changeNavFunc}}>\n        <Navbar/>  \n        <MainTemp/>   \n        </IsNavActive.Provider>\n        <PageFooter/>  \n       </>           \n      :<OfflineErrorPage/>\n      }   \n    </>\n  );\n}\n\nexport default App;\nexport {IsNavActive};","const swDev = () => {\r\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swUrl).then(res => {\r\n        console.log(\"Done\")\r\n    })\r\n}\r\nexport default swDev;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport swDev from \"./swDev\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n swDev();"],"sourceRoot":""}